buildscript {
	ext {
        springBootVersion = '2.1.0.RELEASE'
        spockVersion = '1.2-groovy-2.5'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'eu.solidcraft'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

ext {
	springCloudVersion = 'Finchley.RELEASE'
	lombokVersion = '1.18.2'
}

dependencies {
	//Spring
	implementation('org.springframework.boot:spring-boot-starter-aop')
	implementation('org.springframework.boot:spring-boot-starter-data-jpa')
	implementation('org.springframework.boot:spring-boot-starter-hateoas')
	implementation('org.springframework.boot:spring-boot-starter-security')
	implementation('org.springframework.boot:spring-boot-starter-web')
	implementation('org.springframework.boot:spring-boot-starter-actuator')
	runtime('org.springframework.boot:spring-boot-devtools')
	implementation('org.springframework.retry:spring-retry')

	//DB
	implementation('com.h2database:h2')

	//Other
	compileOnly('org.projectlombok:lombok')

	implementation('commons-io:commons-io:2.5')
	implementation('org.jsoup:jsoup:1.7.3')
	implementation('com.google.guava:guava:21.0')

	//best testing library for java/groovy/kotlin so far
	testImplementation("org.spockframework:spock-core:$spockVersion")
	testImplementation("org.spockframework:spock-spring:$spockVersion")
	testImplementation("com.athaydes:spock-reports:1.6.1") {
		transitive = false // this avoids affecting your version of Groovy/Spock
	}

	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation('org.springframework.security:spring-security-test')
	testImplementation("org.springframework.cloud:spring-cloud-contract-wiremock")
	testImplementation("cglib:cglib-nodep:3.2.5")

}


dependencyManagement {
	imports {		
		mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

compileJava {
	options.incremental = true
	options.compilerArgs << '-parameters'
	options.compilerArgs << '-Xlint:unchecked'
}
